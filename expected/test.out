create extension vops;
create table s(x real);
create table v(x vops_float4);
insert into s values(1.0),(2.0),(null),(3.0),(null),(4.0);
select populate(destination:='v'::regclass, source:='s'::regclass);
 populate 
----------
        6
(1 row)

select unnest(v.*) from v where x > 1;
 unnest 
--------
 (2)
 (3)
 (4)
(3 rows)

select countall(*) from v where x is not null;
 countall 
----------
        4
(1 row)

select count(*) from v where x is null;
 count 
-------
    60
(1 row)

select count(*) from v where x is not null;
 count 
-------
     4
(1 row)

select count(*),count(x),sum(x),avg(x),min(x),max(x),variance(x),var_pop(x),var_samp(x),stddev(x),stddev_pop(x),stddev_samp(x) from v where x >= 0.0;
 count | count | sum | avg | min | max |     variance     | var_pop |     var_samp     |      stddev      |    stddev_pop    |   stddev_samp    
-------+-------+-----+-----+-----+-----+------------------+---------+------------------+------------------+------------------+------------------
     4 |     4 |  10 | 2.5 |   1 |   4 | 1.66666666666667 |    1.25 | 1.66666666666667 | 1.29099444873581 | 1.11803398874989 | 1.29099444873581
(1 row)

select count(*),count(x),sum(x),avg(x),min(x),max(x),variance(x),var_pop(x),var_samp(x),stddev(x),stddev_pop(x),stddev_samp(x) from s where x >= 0.0;
 count | count | sum | avg | min | max |     variance     | var_pop |     var_samp     |      stddev      |    stddev_pop    |   stddev_samp    
-------+-------+-----+-----+-----+-----+------------------+---------+------------------+------------------+------------------+------------------
     4 |     4 |  10 | 2.5 |   1 |   4 | 1.66666666666667 |    1.25 | 1.66666666666667 | 1.29099444873581 | 1.11803398874989 | 1.29099444873581
(1 row)

select count(*),count(x),sum(x),avg(x),min(x),max(x),variance(x),var_pop(x),var_samp(x),stddev(x),stddev_pop(x),stddev_samp(x) from v where x > 1.0;
 count | count | sum | avg | min | max | variance |      var_pop      | var_samp | stddev |    stddev_pop     | stddev_samp 
-------+-------+-----+-----+-----+-----+----------+-------------------+----------+--------+-------------------+-------------
     3 |     3 |   9 |   3 |   2 |   4 |        1 | 0.666666666666667 |        1 |      1 | 0.816496580927726 |           1
(1 row)

select count(*),count(x),sum(x),avg(x),min(x),max(x),variance(x),var_pop(x),var_samp(x),stddev(x),stddev_pop(x),stddev_samp(x) from s where x > 1.0;
 count | count | sum | avg | min | max | variance |      var_pop      | var_samp | stddev |    stddev_pop     | stddev_samp 
-------+-------+-----+-----+-----+-----+----------+-------------------+----------+--------+-------------------+-------------
     3 |     3 |   9 |   3 |   2 |   4 |        1 | 0.666666666666667 |        1 |      1 | 0.816496580927726 |           1
(1 row)

select count(*) from v where ifnull(x, 0) >= 0;
 count 
-------
    64
(1 row)

select count(*) from v where coalesce(x, 0.0::float8::vops_float4) >= 0;
 count 
-------
    64
(1 row)

select unnest(t.*) from (select mcount(*) over w,mcount(x) over w,msum(x) over w,mavg(x) over w,mmin(x) over w,mmax(x) over w,x - lag(x) over w from v window w as (rows between unbounded preceding and current row)) t;
       unnest       
--------------------
 (1,1,1,1,1,1,)
 (2,2,3,1.5,1,2,1)
 (3,2,3,1.5,1,2,)
 (4,3,6,2,1,3,)
 (5,3,6,2,1,3,)
 (6,4,10,2.5,1,4,)
 (7,4,10,2.5,1,4,)
 (8,4,10,2.5,1,4,)
 (9,4,10,2.5,1,4,)
 (10,4,10,2.5,1,4,)
 (11,4,10,2.5,1,4,)
 (12,4,10,2.5,1,4,)
 (13,4,10,2.5,1,4,)
 (14,4,10,2.5,1,4,)
 (15,4,10,2.5,1,4,)
 (16,4,10,2.5,1,4,)
 (17,4,10,2.5,1,4,)
 (18,4,10,2.5,1,4,)
 (19,4,10,2.5,1,4,)
 (20,4,10,2.5,1,4,)
 (21,4,10,2.5,1,4,)
 (22,4,10,2.5,1,4,)
 (23,4,10,2.5,1,4,)
 (24,4,10,2.5,1,4,)
 (25,4,10,2.5,1,4,)
 (26,4,10,2.5,1,4,)
 (27,4,10,2.5,1,4,)
 (28,4,10,2.5,1,4,)
 (29,4,10,2.5,1,4,)
 (30,4,10,2.5,1,4,)
 (31,4,10,2.5,1,4,)
 (32,4,10,2.5,1,4,)
 (33,4,10,2.5,1,4,)
 (34,4,10,2.5,1,4,)
 (35,4,10,2.5,1,4,)
 (36,4,10,2.5,1,4,)
 (37,4,10,2.5,1,4,)
 (38,4,10,2.5,1,4,)
 (39,4,10,2.5,1,4,)
 (40,4,10,2.5,1,4,)
 (41,4,10,2.5,1,4,)
 (42,4,10,2.5,1,4,)
 (43,4,10,2.5,1,4,)
 (44,4,10,2.5,1,4,)
 (45,4,10,2.5,1,4,)
 (46,4,10,2.5,1,4,)
 (47,4,10,2.5,1,4,)
 (48,4,10,2.5,1,4,)
 (49,4,10,2.5,1,4,)
 (50,4,10,2.5,1,4,)
 (51,4,10,2.5,1,4,)
 (52,4,10,2.5,1,4,)
 (53,4,10,2.5,1,4,)
 (54,4,10,2.5,1,4,)
 (55,4,10,2.5,1,4,)
 (56,4,10,2.5,1,4,)
 (57,4,10,2.5,1,4,)
 (58,4,10,2.5,1,4,)
 (59,4,10,2.5,1,4,)
 (60,4,10,2.5,1,4,)
 (61,4,10,2.5,1,4,)
 (62,4,10,2.5,1,4,)
 (63,4,10,2.5,1,4,)
 (64,4,10,2.5,1,4,)
(64 rows)

 
create table s2(x float8, id serial);
insert into  s2(select generate_series(1,100));
create table v2(x vops_float8, id vops_int4);
select populate(destination:='v2'::regclass, source:='s2'::regclass,sort:='id');
 populate 
----------
      100
(1 row)

select unnest(t.*) from (select msum(x,10) over (order by first(id)) from v2) t;
 unnest 
--------
 (1)
 (3)
 (6)
 (10)
 (15)
 (21)
 (28)
 (36)
 (45)
 (55)
 (65)
 (75)
 (85)
 (95)
 (105)
 (115)
 (125)
 (135)
 (145)
 (155)
 (165)
 (175)
 (185)
 (195)
 (205)
 (215)
 (225)
 (235)
 (245)
 (255)
 (265)
 (275)
 (285)
 (295)
 (305)
 (315)
 (325)
 (335)
 (345)
 (355)
 (365)
 (375)
 (385)
 (395)
 (405)
 (415)
 (425)
 (435)
 (445)
 (455)
 (465)
 (475)
 (485)
 (495)
 (505)
 (515)
 (525)
 (535)
 (545)
 (555)
 (565)
 (575)
 (585)
 (595)
 (605)
 (615)
 (625)
 (635)
 (645)
 (655)
 (665)
 (675)
 (685)
 (695)
 (705)
 (715)
 (725)
 (735)
 (745)
 (755)
 (765)
 (775)
 (785)
 (795)
 (805)
 (815)
 (825)
 (835)
 (845)
 (855)
 (865)
 (875)
 (885)
 (895)
 (905)
 (915)
 (925)
 (935)
 (945)
 (955)
 (864)
 (772)
 (679)
 (585)
 (490)
 (394)
 (297)
 (199)
 (100)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
 (0)
(128 rows)

select sum(x) over (order by id rows between 9 preceding and current row) from s2;
 sum 
-----
   1
   3
   6
  10
  15
  21
  28
  36
  45
  55
  65
  75
  85
  95
 105
 115
 125
 135
 145
 155
 165
 175
 185
 195
 205
 215
 225
 235
 245
 255
 265
 275
 285
 295
 305
 315
 325
 335
 345
 355
 365
 375
 385
 395
 405
 415
 425
 435
 445
 455
 465
 475
 485
 495
 505
 515
 525
 535
 545
 555
 565
 575
 585
 595
 605
 615
 625
 635
 645
 655
 665
 675
 685
 695
 705
 715
 725
 735
 745
 755
 765
 775
 785
 795
 805
 815
 825
 835
 845
 855
 865
 875
 885
 895
 905
 915
 925
 935
 945
 955
(100 rows)

